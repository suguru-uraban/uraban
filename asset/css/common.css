@charset "UTF-8";
html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 62.5%;
  vertical-align: baseline;
  background: transparent;
}

html, body {
  height: 100%;
}

body {
  line-height: 1;
  font-family: Avenir , "Open Sans" , "Helvetica Neue" , Helvetica , Arial , Verdana , Roboto , "游ゴシック" , "Yu Gothic" , "游ゴシック体" , "YuGothic" , "ヒラギノ角ゴ Pro W3" , "Hiragino Kaku Gothic Pro" , "Meiryo UI" , "メイリオ" , Meiryo , "ＭＳ Ｐゴシック" , "MS PGothic" , sans-serif;
  background: #ffffff;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

nav ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

a {
  margin: 0;
  padding: 0;
  font-size: 62.5%;
  vertical-align: baseline;
  background: transparent;
}

ins {
  background-color: #ff9;
  color: #000;
  text-decoration: none;
}

mark {
  background-color: #ff9;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

del {
  text-decoration: line-through;
}

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #cccccc;
  margin: 1em 0;
  padding: 0;
}

input, select {
  vertical-align: middle;
}

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Here are example usages in HTML:

`display: block` sprite:
<div class="icon-home"></div>

`display: inline-block` sprite:
<img class="icon-home" />
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.header {
  padding: 10px;
  width: 200px;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background: #3d3d3d;
}
.header h1 {
  font-size: 18px;
  font-size: 1.8rem;
  color: #ffffff;
  line-height: 1.4;
  font-weight: bold;
}
.header .summary {
  margin-top: 10px;
  font-size: 10px;
  font-size: 1.0rem;
  color: #ffffff;
  line-height: 1.4;
}
.header .profile {
  margin-top: 10px;
  padding: 10px;
  -webkit-border-radius: 4px;
          border-radius: 4px;
  -webkit-box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.6);
          box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.6);
  background: #ffffff;
}
.header .profile img {
  margin: 0 auto;
  display: block;
}
.header .profile dl {
  margin-top: 10px;
}
.header .profile dl dt, .header .profile dl dd {
  color: #333333;
  line-height: 1.4;
}
.header .profile dl dt {
  font-size: 12px;
  font-size: 1.2rem;
  font-weight: bold;
}
.header .profile dl dd {
  font-size: 11px;
  font-size: 1.1rem;
}
